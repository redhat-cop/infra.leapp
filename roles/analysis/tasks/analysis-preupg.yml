---
# TODO: Having issues with community.general.redhat_subscription and subscription-manager on RHEL 6.
- name: Register to upgrade activation key
  ansible.builtin.shell: >
    export PATH={{ os_release }};
    subscription-manager register
    --org="{{ satellite_organization }}"
    --activationkey="{{ satellite_activation_key_pre_leapp }}"
    --force
  when:
    - leapp_upgrade_type == 'satellite'
    - satellite_organization is defined
    - satellite_activation_key_pre_leapp is defined
  notify: Register to pre leapp activation key RHEL 6
  register: sub_man_reg
  failed_when: false

- name: Enable requisite RHUI repos
  ansible.builtin.shell: |
    export PATH={{ os_release }}
    set -o pipefail
    yum-config-manager --enable {{ item }}
  loop: "{{ analysis_repos_el6 }}"
  when: leapp_upgrade_type == 'rhui'
  failed_when: false

- name: Preupgrade Assistant and Red Hat Upgrade Tool packages are latest
  ansible.builtin.package:
    name: "{{ analysis_packages_el6 }}"
    enablerepo: "{{ analysis_repos_el6 }}"
    state: latest
  when: leapp_upgrade_type != 'rhui'

- name: Preupgrade Assistant and Red Hat Upgrade Tool packages are latest - RHUI
  ansible.builtin.package:
    name: "{{ analysis_packages_el6 }}"
    state: latest
  when: leapp_upgrade_type == 'rhui'

- name: Lynx is installed for text report
  ansible.builtin.package:
    name: lynx
    state: present
  notify: Remove lynx package

- name: Filesystem capacity checks
  ansible.builtin.script: check-inodes.sh
  changed_when: false
  when: bypass_fs_checks is not defined or (bypass_fs_checks is defined and bypass_fs_checks | lower != 'yes')

- name: Run preupg
  ansible.builtin.shell: >
    export PATH={{ os_release }};
    set -o pipefail;
    preupg --force --text
    2>&1 | tee -a {{ log_file }}
  register: preupg
  args:
    executable: /bin/bash
  async: 43200
  poll: 60
  failed_when: false

- name: Assert that preupg did not encounter errors
  ansible.builtin.assert:
    that: not preupg_return_codes[preupg.rc].fail
    msg: "{{ preupg_return_codes[preupg.rc].msg }}"

- name: Include check-results-file.yml
  ansible.builtin.include_tasks: check-results-file.yml

- name: Collect human readable report results
  ansible.builtin.slurp:
    src: "{{ result_filename }}"
  register: results

- name: Parse report results
  ansible.builtin.set_fact:
    preupg_report_txt: "{{ (results.content | b64decode).split('\n') }}"

- name: Check for inhibitors
  ansible.builtin.set_fact:
    upgrade_inhibited: "{{ preupg_return_codes[preupg.rc].inhibited }}"

...

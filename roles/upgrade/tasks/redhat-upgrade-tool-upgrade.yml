---
- name: redhat-upgrade-tool-upgrade | Run preupg --riskcheck
  ansible.builtin.shell: >
    export PATH={{ os_path }};
    preupg --riskcheck
  register: preupg
  changed_when: false
  failed_when: false

- name: redhat-upgrade-tool-upgrade | Assert that preupg was successful
  ansible.builtin.assert:
    that: not preupg_return_codes[preupg.rc].inhibited
    msg: "{{ preupg_return_codes[preupg.rc].msg }}"

# TODO: Having issues with community.general.redhat_subscription and subscription-manager on RHEL 6.
- name: redhat-upgrade-tool-upgrade | Register to leapp activation key
  ansible.builtin.shell: >
    set -o pipefail;
    export PATH={{ os_path }};
    subscription-manager register
    --org_id: "{{ satellite_organization }}"
    activationkey: "{{ satellite_activation_key_leapp }}"
    force_register: true
  register: sub_man_reg
  when:
    - leapp_upgrade_type == 'satellite'
    - satellite_organization is defined
    - satellite_activation_key_leapp is defined
  failed_when: false
  changed_when: true

- name: redhat-upgrade-tool-upgrade | Include custom-local-repos.yml local_repos_post_upgrade
  vars:
    __local_repos: "{{ local_repos_pre_leapp }}"
  ansible.builtin.include_tasks: custom-local-repos.yml
  when: leapp_upgrade_type == "custom"

- name: redhat-upgrade-tool-upgrade | Gather package facts
  ansible.builtin.package_facts:

- name: redhat-upgrade-tool-upgrade | No packages are version locked
  community.general.yum_versionlock:
    name: "*"
    state: absent
  when: "'yum-plugin-versionlock' in ansible_facts.packages"

# Clean up upgrade repository from failed previous runs.
# So upgrade-and-reboot.yml can succeed.
- name: redhat-upgrade-tool-upgrade | Disable redhat-upgrade-cmdline-instrepo.repo
  ansible.builtin.include_tasks: disable-previous-repo-files.yml
  loop:
    - redhat-upgrade-cmdline-instrepo.repo
  when: leapp_upgrade_type == "custom"

- name: redhat-upgrade-tool-upgrade | Include update-and-reboot.yml
  ansible.builtin.include_tasks: update-and-reboot.yml

- name: redhat-upgrade-tool-upgrade | Disable RHEL 6 repos
  community.general.rhsm_repository:
    name: "*"
    state: disabled
  failed_when: false

- name: redhat-upgrade-tool-upgrade | Include disable-previous-repo-files.yml
  ansible.builtin.include_tasks: disable-previous-repo-files.yml
  loop: "{{ repo_files_to_remove_at_upgrade }}"
  when: leapp_upgrade_type == "custom"

- name: redhat-upgrade-tool-upgrade | Install RPM Key for RHEL 7 ISO Repository
  ansible.builtin.rpm_key:
    key: "{{ rhel_7_network_install_repo_url }}/RPM-GPG-KEY-redhat-release"
    state: present
  when: leapp_upgrade_type == "custom"

# --cleanup-post removes Red Hat signed RHEL 6 packages and in theory should be safe.
- name: redhat-upgrade-tool-upgrade | Run redhat-upgrade-tool
  ansible.builtin.shell: >
    set -o pipefail;
    export PATH={{ os_path }};
    redhat-upgrade-tool --network 7.9 --instrepo {{ rhel_7_network_install_repo_url }} --force --cleanup-post
    2>&1 | tee -a {{ log_file }}
  register: redhat_upgrade_tool
  args:
    executable: /bin/bash
  async: "{{ async_timeout_maximum | int }}"
  poll: "{{ async_poll_interval | int }}"
  # failed_when: false
  changed_when: true

- name: redhat-upgrade-tool-upgrade | Reboot to continue OS upgrade
  ansible.builtin.reboot:
    msg: Host is starting OS upgrade now!
    post_reboot_delay: "{{ post_reboot_delay }}"
    reboot_timeout: 43200
...
